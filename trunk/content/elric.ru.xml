<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.4.2" created="2014-01-18 15:33" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>The Temple of the Rising Sun</title>
	<link>http://elric.ru/wordpress</link>
	<description>where Elric dwells</description>
	<pubDate>Sat, 18 Jan 2014 15:33:24 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://elric.ru/wordpress</wp:base_site_url>
	<wp:base_blog_url>http://elric.ru/wordpress</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login>Elric</wp:author_login><wp:author_email>ru.elric@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Elric]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>japan</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Japan]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name></wp:category>

	<generator>http://wordpress.org/?v=3.4.2</generator>

	<item>
		<title>Home</title>
		<link>http://elric.ru/wordpress/</link>
		<pubDate>Thu, 06 May 2010 18:48:01 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=5</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Welcome to the Temple of the Rising Sun, a virtual haven of Fokin Alexander.</p>

<p>Please feel at ease at the Temple. Take a deep breath, pour yourself a cup of tea. Or, if you want to push it a little further, turn off your PC and take a stroll to the nearest place where you can contemplate and relax.</p>

<p>For those who are still here. The most interesting things to see at the Temple of the Rising Sun are:</p>
<ul class="v-shrink">
	<li> My ongoing and completed <a href="projects">projects</a>;</li>
	<li> My personal <a href="blog">blog</a>;</li>
	<li> Information <a href="about">about me</a>.</li>
</ul>

<p>If you have any suggestions or questions, please <a href="mailto:ru.elric@gmail.com">contact me</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2010-05-06 21:48:01</wp:post_date>
		<wp:post_date_gmt>2010-05-06 18:48:01</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Blog</title>
		<link>http://elric.ru/wordpress/blog/</link>
		<pubDate>Thu, 06 May 2010 18:50:35 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=8</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I don't run a blog at <a href="http://elric.ru/">elric.ru</a> anymore, as this website is more of a business card and a blog just doesn't fit in.</p>

<p>However, you can read my ramblings about life in Japan on my wordpress blog <a href="http://elricj.wordpress.com">Elric in Japan</a>. I also post on <a href="http://ru-elric.livejournal.com">LiveJournal</a> from time to time.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2010-05-06 21:50:35</wp:post_date>
		<wp:post_date_gmt>2010-05-06 18:50:35</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>blog</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>12</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Projects</title>
		<link>http://elric.ru/wordpress/projects/</link>
		<pubDate>Thu, 06 May 2010 19:56:13 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=14</guid>
		<description></description>
		<content:encoded><![CDATA[<p> My major and minor projects are listed here, in no particular order. </p>

<p> Note that this page is still under construction. Some of the projects I was involved in are not listed here. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2010-05-06 22:56:13</wp:post_date>
		<wp:post_date_gmt>2010-05-06 19:56:13</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>20</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[projects.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>split_by_seriousness</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>serious_header</wp:meta_key>
			<wp:meta_value><![CDATA[<hr/><h1> Major projects </h1>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>non_serious_header</wp:meta_key>
			<wp:meta_value><![CDATA[<hr/><h1> Minor projects </h1>]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CV</title>
		<link>http://elric.ru/wordpress/cv/</link>
		<pubDate>Thu, 06 May 2010 19:56:43 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=16</guid>
		<description></description>
		<content:encoded><![CDATA[Here is my <a href="http://wings-of-wrath.googlecode.com/hg/cv/CV.pdf">CV</a> along with the diploma transcript <a href="https://docs.google.com/open?id=1BkJnOULxKyTtXqLFPndIZaTaUS8zvHBBAo1sAcxkRxmrpyfPGQc-6zpXAu42&authkey=CJblv_UM">in English</a> and <a href="https://docs.google.com/open?id=1oF3PXIZFEUI2A4DV7f1zK2i_M8Q57tZMa8_wKXuE0hLHZzP8H3JPPRozzMCO&authkey=CJvO6u4D">in Russian</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2010-05-06 22:56:43</wp:post_date>
		<wp:post_date_gmt>2010-05-06 19:56:43</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>21</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SMART</title>
		<link>http://elric.ru/wordpress/projects/smart/</link>
		<pubDate>Sat, 08 May 2010 09:49:23 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=139</guid>
		<description></description>
		<content:encoded><![CDATA[<p> SMART is a real-time ray tracing engine. Its name stands for SMART Minimalistic Arx Ray Tracer. </p>

<!--more-->

<p> SMART was designed from the ground with performance and extensibility in mind. The main design rule followed during the development of SMART was never to sacrifice the flexibility of the engine unless it is sacrificed for performance. </p>

<p> The main features of the SMART engine are: </p>

<ul class="p-list">
<li> Triangle geometry. SMART works with triangles only. This restriction increases the performance of ray tracer, while not imposing a major penalty on the flexibility &mdash; anyway, almost all of the real-world 3d models use polygonal representation. </li>
<li> Axis-aligned BSP tree as acceleration structure for geometry. BSP trees have shown to perform at least not worse than any other acceleration structures, while allowing for a very simple, and therefore really fast traversal implementation. Another benefit of BSP trees is that the implementation of ray packet traversal for them is rather straightforward, which is not generally true for other acceleration structures. </li>
<li> <i>O(N logN)</i> BSP tree construction, as described in [<a href="#ref1">1</a>]. Fast BSP tree building algorithm based on Surface Area Heuristic is used, which produces high quality BSP trees while offering a complexity of <i>O(N logN)</i>, which is a theoretical lower bound for any BSP tree building algorithm. </li>
<li> Two-level acceleration structure. SMART operates on immutable geometry units &mdash; models. Each model consists of several triangles and cannot be changed once compiled. That means that for each model a BSP tree must be built only once &mdash; at the time of model construction and can be reused during rendering of several succeeding frames. To allow for dynamic scenes, compiled models are inserted into a top-level global BSP tree, which is rebuilt every frame. Models that are generated anew each frame could also be used with this approach, but they will require another BSP tree building algorithm that would work faster but possibly produce BSP trees of inferior quality.</li>
<li> Multithreaded rendering. SMART automatically determines the number of available cores and performs rendering in the corresponding number of threads. Load balancing is done automatically, so that when double buffering is used, rendering threads do not stall between frames, therefore utilizing all available computational power. </li>
<li> Carefully optimized triangle intersection and BSP tree traversal routines. Ray tracer spends most of the rendering time in these routines, therefore they must be extremely optimized. SMART uses a method described by Ingo Wald in his Ph.D. thesis [<a href="#ref2">2</a>] with some slight modifications to pay attention to floating point issues.</li>
</ul>

<p> More information on SMART is available in this <a href='https://tomes-of-power.googlecode.com/svn/trunk/articles/smart_report/smart.pdf' title="SMART Details">report</a>. It is a bit messy and outdated, though. </p>

<p class="bibliography">
[<a name="ref1">1</a>] I. Wald and V. Havran. On building fast kd-trees for ray tracing, and on doing that in <i>O(N logN)</i>. Proceedings of the 2006 IEEE Symposium on Interactive Ray Tracing, 2006. <a href="http://www.sci.utah.edu/~wald/Publications/2006///NlogN/download//kdtree.pdf">[PDF]</a> <br/>
[<a name="ref2">2</a>] I. Wald. Realtime Ray Tracing and Interactive Global Illumination. PhD thesis, 2004. <a href="http://www.sci.utah.edu/~wald/Publications/2004///WaldPhD/download//phd.pdf">[PDF]</a> <br/>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date>2010-05-08 12:49:23</wp:post_date>
		<wp:post_date_gmt>2010-05-08 09:49:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>smart</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>project_page</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.google.com/p/smart-rt/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://smart-rt.googlecode.com/hg/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[LGPL]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://wp-elric-ru.googlecode.com/svn/trunk/content/images/smart-150x100.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Krug short film intro</title>
		<link>http://elric.ru/wordpress/projects/krug-short-movie-intro/</link>
		<pubDate>Sat, 08 May 2010 10:00:13 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=142</guid>
		<description></description>
		<content:encoded><![CDATA[<p>An intro for the short film "Krug" directed by my friend, Ilya Vasilyev. It was generated by a C++ program that uses OpenGL for rendering. </p>

<!--more-->

<div class="alignclear"></div>

<hr />

<div style="width: 560px" class="photo-box to-center">
<object width="560" height="340"><param name="movie" value="http://www.youtube.com/v/6DGntIpTe3I&hl=en_US&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/6DGntIpTe3I&hl=en_US&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="560" height="340"></embed></object>
</div>

<div class="alignclear"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2010-05-08 13:00:13</wp:post_date>
		<wp:post_date_gmt>2010-05-08 10:00:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>krug-short-movie-intro</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://wp-elric-ru.googlecode.com/svn/trunk/content/images/krug-150x84.gif]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DelphiRT</title>
		<link>http://elric.ru/wordpress/projects/delphir/</link>
		<pubDate>Mon, 10 May 2010 13:03:37 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=214</guid>
		<description></description>
		<content:encoded><![CDATA[<p>DelphiRT was my second attempt at implementing a ray tracer. It was written in Object Pascal programming language. </p>

<!--more-->

<p>DelphiRT implements metaballs, depth of field and a standard set of features one would expect to have in a ray tracer - refractions, reflections, shadows. </p>

<div class="alignclear"></div>

<hr/>

<div style="width: 425px" class="photo-box to-center">
<object width="425" height="344"><param name="movie" value="http://www.youtube.com/v/TOqBWkzkTkE&hl=en_US&fs=1&"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/TOqBWkzkTkE&hl=en_US&fs=1&" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="344"></embed></object>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2010-05-10 16:03:37</wp:post_date>
		<wp:post_date_gmt>2010-05-10 13:03:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>delphir</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='https://chaos-devices.googlecode.com/hg/projects/delphirt/delphirt.zip' title="DelphiRT source">delphirt-1.0.0.zip</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://wp-elric-ru.googlecode.com/svn/trunk/content/images/delphirt-150x100.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ArXClock</title>
		<link>http://elric.ru/wordpress/projects/arxclock/</link>
		<pubDate>Mon, 10 May 2010 18:59:34 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=240</guid>
		<description></description>
		<content:encoded><![CDATA[<p>ArXClock is a simple alarm clock application written in C++ using Qt and (a bit of) boost libraries. ArXClock uses Qt Phonon library for music playback.</p>

<!--more-->

<p>Main features of ArXClock are:</p>
<ul class="v-shrink">
<li> Daily, weekly, monthly alarms;</li>
<li> Playback of a music file on alarm;</li>
<li> Execution of a shell command on alarm;</li>
<li> Snoozing a ringing alarm for an arbitrary amount of time. </li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2010-05-10 21:59:34</wp:post_date>
		<wp:post_date_gmt>2010-05-10 18:59:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arxclock</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[-2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>project_page</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.google.com/p/arxclock/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[http://arxclock.googlecode.com/svn/trunk/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[LGPL]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wordpress theme for elric.ru</title>
		<link>http://elric.ru/wordpress/projects/wordpress-theme-for-elric-ru/</link>
		<pubDate>Tue, 04 May 2010 10:38:51 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=363</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This website is powered by Wordpress and uses a theme I crafted in my free time. This theme is my first (and most probably the last) web design project. </p>

<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>363</wp:post_id>
		<wp:post_date>2010-05-04 13:38:51</wp:post_date>
		<wp:post_date_gmt>2010-05-04 10:38:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wordpress-theme-for-elric-ru</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>project_page</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.google.com/p/wp-elric-ru/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[http://wp-elric-ru.googlecode.com/svn/trunk/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[LGPL]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://wp-elric-ru.googlecode.com/svn/trunk/content/images/elricru-150x100.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Form Recognition Toolkit</title>
		<link>http://elric.ru/wordpress/projects/form-recognition-toolkit/</link>
		<pubDate>Tue, 13 Apr 2010 17:08:42 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=441</guid>
		<description></description>
		<content:encoded><![CDATA[<p> In the end of 2009 I have written several form processing and recognition tools for use at MSU and in some Moscow schools. These tools are currently used in a system for exam results checking. </p>

<!--more-->

<div class="photo-box to-right" style="width: 110px">
<a href="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/form.jpg"><img src="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/form-106x150.jpg" alt="" title="Form" width="106" height="150" class="alignnone size-thumbnail wp-image-444" /></a><br/> A typical filled answer sheet.
</div>

<p> This toolkit was created with written exams that cannot be checked automatically in mind. Normally, a student on such an exam must write down complete solutions for the problems presented, which are then checked by one or several experts. </p>

<p> A typical use case of the system for exam results checking is as follows: </p>
<ul>
<li> Individual answer sheets for each of the students are generated and handed out before the exam. Unique exam id and student id are encoded in the barcode on each sheet.</li>
<li> After the exam is finished, filled answer sheets are collected and fed to the batch scanner. They are aligned, recognized and stored into the database. <b>After this, answer sheets can be trashed.</b> This drastically reduces the amount of papers to deal with and also makes it almost impossible to lose one of the answer sheets in process.</li>
<li> After all the answer sheets were stored into the database, they are split into packages. When checking, for each package all of its answer sheets are printed along with a protocol page to put grades on. It is often important to make sure that the person who checks answer sheets doesn't know who these answer sheets belong to. This is archived by replacing the headers of the answer sheets before printing. </li>
<li> Once the checking is finished, protocol page and answer sheets (probably with some notes indicating mistakes) are fed to the batch scanner and recognized. Results are stored into database and are available online for the students to see. </li>
</ul>

<div class="photo-box to-right" style="width: 150px">
<a href="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/protocol.jpg"><img src="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/protocol-150x106.jpg" alt="" title="Protocol" width="150" height="106" class="alignnone size-thumbnail wp-image-442" /></a><br/>
A typical recognized protocol page. Fields that were filled out incorrectly are marked in red. <br/>
</div>

<p> The toolkit I wrote is used for answer sheet and protocol recognition in the described system. </p>

<p> I'll share the sources as soon as I get permission from my employer. </p>


<div class="alignclear"></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date>2010-04-13 20:08:42</wp:post_date>
		<wp:post_date_gmt>2010-04-13 17:08:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>form-recognition-toolkit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cave</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/cave/</link>
		<pubDate>Thu, 11 Jun 2009 20:18:25 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=513</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This was the very first OpenGL demo I have written from scratch. It features shadow mapping and stencil reflections. </p>

<!--more-->

<p>The demo came out a bit too dark and gloomy so you'll probably have to adjust your monitor's brightness, especially if you are sitting in a brightly lit room.</p>

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 465px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Cave-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Cave-1s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-515" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Cave-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Cave-2s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-516" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Cave-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Cave-3s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-517" /></a><br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>513</wp:post_id>
		<wp:post_date>2009-06-11 23:18:25</wp:post_date>
		<wp:post_date_gmt>2009-06-11 20:18:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cave</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/cave-1.0.0.zip'>cave-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Cave-2s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2006%20-%20Cave/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ravings of a Madman</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/ravings-of-a-madman/</link>
		<pubDate>Thu, 11 Jun 2009 17:52:01 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=531</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This demo was my first experiment in implementing flat shadows via stencil buffer. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 465px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/RavingsOfAMadman-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/RavingsOfAMadman-1s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-533" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/RavingsOfAMadman-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/RavingsOfAMadman-2s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-534" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/RavingsOfAMadman-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/RavingsOfAMadman-3s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-535" /></a><br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>531</wp:post_id>
		<wp:post_date>2009-06-11 20:52:01</wp:post_date>
		<wp:post_date_gmt>2009-06-11 17:52:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ravings-of-a-madman</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/RavingsOfAMadman-3s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/ravings_of_a_madman-1.0.0.zip'>ravings_of_a_madman-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2006%20-%20Ravings%20of%20a%20Madman/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Some Kind of a CGProject</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/some-kind-of-a-cgproject/</link>
		<pubDate>Thu, 11 Mar 2010 18:01:39 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=543</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This demo is a simple music visualizer that uses bass library for mp3 playback and processing. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 465px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/SomeKindOfACGProject-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/SomeKindOfACGProject-1s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-545" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/SomeKindOfACGProject-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/SomeKindOfACGProject-2s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-546" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/SomeKindOfACGProject-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/SomeKindOfACGProject-3s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-547" /></a><br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>543</wp:post_id>
		<wp:post_date>2010-03-11 21:01:39</wp:post_date>
		<wp:post_date_gmt>2010-03-11 18:01:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>some-kind-of-a-cgproject</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/some_kind_of_a_cgproject-1.0.0.zip'>some_kind_..._cgproject-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/SomeKindOfACGProject-3s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2006%20-%20Some%20Kind%20of%20a%20CGProject/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Temple</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/temple/</link>
		<pubDate>Thu, 11 Jun 2009 18:27:33 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=566</guid>
		<description></description>
		<content:encoded><![CDATA[<p>For this demo I have implemented a perlin noise landscape generator. You can see the generated landscape on the pedestal in the center of the temple. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 465px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Temple-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Temple-1s.png" alt="" title="Temple-1" width="150" height="112" class="alignnone size-thumbnail wp-image-568" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Temple-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Temple-2s.png" alt="" title="Temple-2" width="150" height="112" class="alignnone size-thumbnail wp-image-569" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Temple-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Temple-3s.png" alt="" title="Temple-3" width="150" height="112" class="alignnone size-thumbnail wp-image-570" /></a><br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>566</wp:post_id>
		<wp:post_date>2009-06-11 21:27:33</wp:post_date>
		<wp:post_date_gmt>2009-06-11 18:27:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>temple</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://elric.ru/wp-content/uploads/2010/06/temple-1.0.0.zip'>temple-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Temple-3s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2006%20-%20Temple/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>15 is Enough</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/15-is-enough/</link>
		<pubDate>Wed, 10 Jun 2009 18:36:38 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=573</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This demo was intended as a joke on the grading system of computer graphics course at the CMC department of MSU. It consists of several scenes, each implementing one simple effect. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 620px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-1s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-575" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-2s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-576" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-3s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-577" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-4.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-4s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-578" /></a>
<br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>573</wp:post_id>
		<wp:post_date>2009-06-10 21:36:38</wp:post_date>
		<wp:post_date_gmt>2009-06-10 18:36:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>15-is-enough</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/15_is_enough-1.0.0.zip'>15_is_enough-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/15IsEnough-3s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2007%20-%2015%20is%20Enough/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Desert</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/desert/</link>
		<pubDate>Thu, 11 Jun 2009 21:39:42 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=599</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This demo implements depth of field and anti-aliasing via accumulation buffer and procedural landscape. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 465px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Desert-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Desert-1s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-601" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Desert-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Desert-2s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-602" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Desert-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Desert-3s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-603" /></a>
<br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>599</wp:post_id>
		<wp:post_date>2009-06-12 00:39:42</wp:post_date>
		<wp:post_date_gmt>2009-06-11 21:39:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>desert</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/desert-1.0.0.zip'>desert-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Desert-3s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2007%20-%20Desert/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Quasiballs</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/quasiballs/</link>
		<pubDate>Thu, 11 Jun 2009 21:52:07 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=608</guid>
		<description></description>
		<content:encoded><![CDATA[<p> For this demo I have implemented a metaball-like structure that morphs in the most unimaginable ways. Today even I cannot explain what's happening there. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>
<div class="photo-box multi-photo to-center" style="width: 620px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-1s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-614" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-2s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-615" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-3s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-616" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-4.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-4s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-617" /></a><br/>
Screenshots.
</div>





<blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>608</wp:post_id>
		<wp:post_date>2009-06-12 00:52:07</wp:post_date>
		<wp:post_date_gmt>2009-06-11 21:52:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>quasiballs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/quasiballs-1.0.0.zip'>quasiballs-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/Quasiballs-1s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2007%20-%20QuasiBalls/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nameless World</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/nameless-world/</link>
		<pubDate>Thu, 11 Jun 2009 21:40:44 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=641</guid>
		<description></description>
		<content:encoded><![CDATA[<p> Almost everything in this demo is computer-generated. Objects are placed randomly and procedural textures are used. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 620px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-2s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-644" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-3.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-3s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-645" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-4.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-4s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-646" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-5.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-5s.png" alt="" width="150" height="112" class="alignnone size-thumbnail wp-image-647" /></a>

<br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>641</wp:post_id>
		<wp:post_date>2009-06-12 00:40:44</wp:post_date>
		<wp:post_date_gmt>2009-06-11 21:40:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nameless-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/nameless_world-1.0.0.zip'>nameless_world-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/NamelessWorld-3s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2008%20-%20Nameless%20World/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dark Ritual</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/dark-ritual/</link>
		<pubDate>Thu, 11 Jun 2009 21:00:31 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=665</guid>
		<description></description>
		<content:encoded><![CDATA[<p> This demo ended up as a soup of effects. I have implemented stencil shadow volumes (like in Doom 3!), bump-mapping and a lot of other stuff. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 307px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/DarkRitual-1.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/DarkRitual-1s.png" alt="" title="DarkRitual-1" width="150" height="112" class="alignnone size-thumbnail wp-image-667" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/DarkRitual-2.png"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/DarkRitual-2s.png" alt="" title="DarkRitual-2" width="150" height="112" class="alignnone size-thumbnail wp-image-668" /></a>
<br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>665</wp:post_id>
		<wp:post_date>2009-06-12 00:00:31</wp:post_date>
		<wp:post_date_gmt>2009-06-11 21:00:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dark-ritual</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://elric.ru/wp-content/uploads/2010/06/dark_ritual-1.0.0.zip'>dark_ritual-1.0.0</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/DarkRitual-2s.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2009%20-%20Dark%20Ritual/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>About</title>
		<link>http://elric.ru/wordpress/about/</link>
		<pubDate>Tue, 04 May 2010 19:58:09 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[<div style="width: 206px" class="photo-box to-right to-top"><a href="https://plus.google.com/photos/100177180062339664882/albums/5468810632007115217/5880020614765183282?pid=5880020614765183282&oid=100177180062339664882"><img src="https://lh6.googleusercontent.com/-cWB_ok_Mj74/UZoHmG8NgTI/AAAAAAAACgQ/E9iu9e2EnqA/s200/DSC_6330.jpg" /></a>From <a href="https://plus.google.com/photos/100177180062339664882/albums/5468810632007115217">Me</a></div>

<p>I am a M.Sc. in Applied Mathematics and Computer Science from Moscow State University (2009). During my M.Sc. I was a short-term student at Chuo University (Tokyo, Japan, September 2008 to February 2009), where I was studying Japanese and did some work on real-time ray tracing. My research interests include image-based modeling and rendering, 3d reconstruction and decompilation. </p>

<p>I am a skilled programmer with experience in C++ and a handful of other languages. During my years at the university I have worked part time as a programmer at Intel Students Research Lab at the department of Computational Mathematics and Cybernetics (February 2007 to April 2008) and at the Institute for System Programming of Russian Academy of Sciences (September 2007 to September 2008). At the Intel Lab I was developing a panorama stitching application in C++. At the Institute for System Programming I was working as a C++ programmer in a team developing a framework for dynamic analysis of binary code.</p>

<p>I am currently involved in several research and programming projects. You can check them out at the <a href="projects">projects</a> page.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2010-05-04 19:58:09</wp:post_date>
		<wp:post_date_gmt>2010-05-04 19:58:09</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>about</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PRec</title>
		<link>http://elric.ru/wordpress/projects/prec/</link>
		<pubDate>Mon, 10 May 2010 20:06:42 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=264</guid>
		<description></description>
		<content:encoded><![CDATA[<p> PRec is a panorama recognizer that I wrote while working at Intel Students Research Lab at the faculty of Computational Mathematics and Cybernetics. </p>

<!--more-->

<p> PRec automatically recognizes panoramas in a set of input images and stitches them. The process used is described in [<a href="#ref1">1</a>]. PRec is written in C++ and uses Intel Integrated Performance Primitives library for low-level image operations. </p>

<p> The overview of the process is as follows: </p>
<ul class="v-shrink">
<li> SIFT features are extracted from input images as described in [<a href="#ref2">2</a>]. </li>
<li> SIFT features are matched using fast approximate nearest neighbor search as described in [<a href="#ref3">3</a>]. </li>
<li> For each pair of input images, a RANSAC-class algorithm is used to filter out outlying feature matches. </li>
<li> Image matches are filtered and a set of panoramas is constructed. </li>
<li> For each panorama, bundle adjustment is used to jointly optimize camera parameters of input images. </li>
</ul>

<p> I'm currently struggling with adapting image-base modeling methods to panorama stitching to properly compensate for parallax effects. The sources are rather messy, so they are not here (yet). I'll share them as soon as I have some time to clean them up. </p>

<p class="bibliography">
[<a name="ref1">1</a>] M. Brown and D. G. Lowe. Recognising Panoramas. International Conference on Computer Vision, 2003. <a href="http://lcav.epfl.ch/~brown/papers/iccv2003.pdf">[PDF]</a>.<br/>
[<a name="ref2">2</a>] D. G. Lowe. Distinctive Image Features from Scale-Invariant Keypoints. International Journal of Computer Vision, 2004. <a href="http://www.cs.ubc.ca/~lowe/papers/ijcv04.pdf">[PDF]</a>.<br/>
[<a name="ref3">3</a>] J. S. Beis and D. G. Lowe. Shape indexing using approximate nearest-neighbour search in high-dimensional spaces. Conference on Computer Vision and Pattern Recognition, 1997. <a href="http://www.cs.ubc.ca/~lowe/papers/cvpr97.pdf">[PDF]</a>.
</p>

<hr />

<div style="width: 620px" class="photo-box multi-photo to-center">
<a href="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano1.jpg"><img src="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano1-150x112.jpg" alt="" title="Pano 1" width="150" height="112" class="alignnone size-thumbnail wp-image-340" /></a>
<a href="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano2.jpg"><img src="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano2-150x112.jpg" alt="" title="Pano 2" width="150" height="112" class="alignnone size-thumbnail wp-image-339" /></a>
<a href="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano3.jpg"><img src="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano3-150x112.jpg" alt="" title="Pano 3" width="150" height="112" class="alignnone size-thumbnail wp-image-338" /></a>
<a href="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano4.jpg"><img src="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/pano4-150x112.jpg" alt="" title="Pano 4" width="150" height="112" class="alignnone size-thumbnail wp-image-337" /></a>
<br/>
Example input.
</div>

<div style="width: 300px" class="photo-box to-center">
<a href="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/panoresult.jpg"><img src="https://wp-elric-ru.googlecode.com/svn/trunk/content/images/panoresult-300x78.jpg" alt="" title="PRec example output" width="300" height="78" class="alignnone size-medium wp-image-277" /></a>
Example output.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2010-05-10 23:06:42</wp:post_date>
		<wp:post_date_gmt>2010-05-10 20:06:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>prec</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://wp-elric-ru.googlecode.com/svn/trunk/content/images/prec-150x100.jpg]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ipp4r</title>
		<link>http://elric.ru/wordpress/projects/ipp4r/</link>
		<pubDate>Mon, 10 May 2010 21:03:34 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=284</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ipp4r is a Ruby extension that wraps some of the image processing routines from Intel Integrated Performance Primitives library. I wrote it while working at Intel Students Research Lab at the faculty of Computational Mathematics and Cybernetics. </p>

<!--more-->

<p> Note that Ipp4r was more of a programming exercise than a serious project. It most probably won't build against the latest Ruby sources. Ipp4r is written in C and extensively uses preprocessor metaprogramming to automate the generation of boilerplate code. To simplify some of the tasks I wrote a small library for preprocessor metaprogramming similar to Boost.Preprocessor.</p>

<p> Main features of Ipp4r are: </p>
<ul class="v-shrink">
<li> Abstraction. Ipp4r offers a high-level Ruby interface to low-level IPP functions. </li>
<li> Extensibility. Ipp4r is easily extensible, so that new functions can be added without understanding all the trickery of Ruby implementation. </li>
<li> Performance. Ipp4r is backed by the Intel Integrated Performance Primitives library, so it significantly outperforms all of the available Ruby image processing libraries (at least, that was true at the moment when these lines were written). </li>
</ul>

<hr />
<p> Example Ruby code:</p>
<pre class="brush:ruby">
require 'ipp4r'

img = Ipp::Image.jaehne(1000, 1000)
img.add_rand_uniform!(0, 0.2).save("random.jpg")
img.filter_median(Ipp::Size.new(15,15)).save("median.jpg")
</pre>

<p>In the third line, <a href="http://software.intel.com/sites/products/documentation/hpc/ipp/ippi/ippi_ch4/functn_ImageJaehne.html">jaehne</a> sample image of size 1000x1000 is created and stored in the <tt>img</tt> variable. In the 4th line a linearly distributed noise is added to <tt>img</tt> and result is saved to <tt>"random.jpg"</tt>. In the 5th line a median filter of size 15x15 is applied to the noisy image and the result is saved to <tt>"median.jpg"</tt>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date>2010-05-11 00:03:34</wp:post_date>
		<wp:post_date_gmt>2010-05-10 21:03:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ipp4r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://ipp4r.googlecode.com/files/ipp4r-0.3.5.tar.gz' title="Ipp4r source">ipp4r-0.3.5.tar.gz</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>project_page</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.google.com/p/ipp4r/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://ipp4r.googlecode.com/hg/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OpenGL Demos</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/</link>
		<pubDate>Thu, 02 Sep 2010 19:29:18 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=349</guid>
		<description></description>
		<content:encoded><![CDATA[<p> During my years at the university I have created a lot of simple OpenGL demos. Some of them were course assignments, some were written just for fun. Note that these programs are not "demos" in a traditional sense, i.e. I didn't spend much time on speed/size optimizations. </p>

<!--more-->

<p> Not all of the demos are listed here. Visit project website to see more. </p>

<hr/>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>349</wp:post_id>
		<wp:post_date>2010-09-02 22:29:18</wp:post_date>
		<wp:post_date_gmt>2010-09-02 19:29:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>opengl-demos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[projects.php]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/OpenGLs.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>project_page</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.google.com/p/cmc-cg/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Decompilation Research</title>
		<link>http://elric.ru/wordpress/projects/decompilation-research/</link>
		<pubDate>Tue, 11 May 2010 10:25:57 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=350</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Starting from summer 2008 I've been doing research in the field of decompilation at the Institute for System Programming of the Russian Academy of Sciences under the supervision of Prof. Alexander Chernov together with Katerina Troshina. </p>

<!--more-->

<p> Our first goal was to investigate the ways profile-time information can be used to aid decompilation. We thought that variable values collected during profiling may be used to improve the quality of type reconstruction. After carrying out experiments, some of our hypotheses were rendered ineffectual, but the one regarding the differentiation of pointer and integer variables was confirmed. Our research was concluded with a publication at ICPC2009 [<a href="#ref1">1</a>]. </p>

<p>Since then we have been working on decompilation of C++ programs. Our main goal is to develop a set of techniques that could be used for decompilation of assembly programs into C++. Our current results are summarized in papers [<a href="#ref2">2</a>, <a href="#ref2">3</a>].</p>

<p class="bibliography">
[<a name="ref1">1</a>] K. Troshina, A. Chernov and A. Fokin. Profile-Based Type Reconstruction for Decompilation. International Conference on Program Comprehension, 2009. <a href='http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=5090054'>[IEEE]</a><br/>
[<a name="ref2">2</a>] A. Fokin, K. Troshina and A. Chernov. Reconstruction of Class Hierarchies for Decompilation of C++ Programs. Conference on Software Maintenance and Reengineering, 2010. <a href='http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?tp=&arnumber=5714442'>[IEEE]</a><br/>
[<a name="ref3">3</a>] A. Fokin, E. Derevenetc, A. Chernov and K. Troshina. SmartDec: Approaching C++ Decompilation. In Proceedings of 18th Working Conference on Reverse Engineering, 2011. <a href='http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=6079860'>[IEEE]</a><br/>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>350</wp:post_id>
		<wp:post_date>2010-05-11 13:25:57</wp:post_date>
		<wp:post_date_gmt>2010-05-11 10:25:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>decompilation-research</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>project_page</wp:meta_key>
			<wp:meta_value><![CDATA[http://decompilation.info/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[Proprietary]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reflections Revised</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/reflections-revised/</link>
		<pubDate>Tue, 11 May 2010 13:26:49 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=383</guid>
		<description></description>
		<content:encoded><![CDATA[<p> This demo was my first experiment with pixel shaders.  They were used to implement "fair" reflection and refraction, phong shading and multi-layer clouds. </p>

<!--more-->

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 465px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/ReflectionsRevised-4.jpg"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/ReflectionsRevised-4s.jpg" alt="" width="150" height="99" class="alignnone size-thumbnail wp-image-386" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/ReflectionsRevised-2.jpg"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/ReflectionsRevised-2s.jpg" alt="" width="150" height="99" class="alignnone size-thumbnail wp-image-384" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/ReflectionsRevised-3.jpg"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/ReflectionsRevised-3s.jpg" alt="" width="150" height="99" class="alignnone size-thumbnail wp-image-385" /></a><br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>383</wp:post_id>
		<wp:post_date>2010-05-11 16:26:49</wp:post_date>
		<wp:post_date_gmt>2010-05-11 13:26:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reflections-revised</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/reflections_revised-1.0.0.zip'>reflections_revised-1.0.0.zip</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/ReflectionsRevised-4s.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2007%20-%20Reflections%20Revised/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What&#039;s up, people!</title>
		<link>http://elric.ru/wordpress/projects/opengl-demos/whats-up-people/</link>
		<pubDate>Tue, 11 May 2010 13:49:28 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=403</guid>
		<description></description>
		<content:encoded><![CDATA[<p> This demo is probably the craziest one I have ever written. It was hacked together in a fit of inspiration in three evenings and after that I have made only some minor changes. One of the neat features I have implemented for this demo is an image-based CSG rendering (also known as z-buffer CSG rendering).</p>

<!--more-->

<p> Warning for those who understand English and/or Japanese: bad language inside. </p>

<div class="alignclear"> </div>

<hr/>

<div class="photo-box multi-photo to-center" style="width: 465px">
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/WhatsUpPeople-1.jpg"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/WhatsUpPeople-1s.jpg" alt="" width="150" height="99" class="alignnone size-thumbnail wp-image-407" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/WhatsUpPeople-2.jpg"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/WhatsUpPeople-2s.jpg" alt="" width="150" height="99" class="alignnone size-thumbnail wp-image-409" /></a>
<a href="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/WhatsUpPeople-3.jpg"><img src="https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/WhatsUpPeople-3s.jpg" alt="" width="150" height="99" class="alignnone size-thumbnail wp-image-408" /></a><br/>
Screenshots.
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>403</wp:post_id>
		<wp:post_date>2010-05-11 16:49:28</wp:post_date>
		<wp:post_date_gmt>2010-05-11 13:49:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>whats-up-people</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>349</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>downloads</wp:meta_key>
			<wp:meta_value><![CDATA[<a href='http://cmc-cg.googlecode.com/files/whats_up_people-1.0.0.zip'>whats_up_people-1.0.0.zip</a>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[MIT]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>icon_link</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_Screenshots/WhatsUpPeople-1s.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>platforms</wp:meta_key>
			<wp:meta_value><![CDATA[Windows]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://cmc-cg.googlecode.com/svn/trunk/_2007%20-%20What%27s%20up,%20people!/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ImgCmp</title>
		<link>http://elric.ru/wordpress/projects/imgcmp/</link>
		<pubDate>Thu, 02 Sep 2010 18:28:17 +0000</pubDate>
		<dc:creator>Elric</dc:creator>
		<guid isPermaLink="false">http://elric.ru/?page_id=720</guid>
		<description></description>
		<content:encoded><![CDATA[<p>ImgCmp is a tool that helps you manage large collections of images (e.g. wallpapers, scans, photos...). ImgCmp detects similar (not equal) images, thus allowing to eliminate redundant copies of the same image in multiple resolutions or formats.</p>

<!--more-->

<p>Main features of ImgCmp are:</p>
<ul class="v-shrink">
<li> Support for BMP, GIF and JPG image formats. </li>
<li> Automatic assignment of ratings to similar images so that you can save only the better ones. </li>
<li> Maintenance of a database of processed files so that once you want to update your image collection you won't need to rescan it. </li>
</ul>

<p>ImgCmp currently cannot properly handle line drawings (e.g. manga scans) as they are all pretty similar.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date>2010-09-02 21:28:17</wp:post_date>
		<wp:post_date_gmt>2010-09-02 18:28:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>imgcmp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>14</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_finished</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>is_serious</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>license</wp:meta_key>
			<wp:meta_value><![CDATA[LGPL]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>project_page</wp:meta_key>
			<wp:meta_value><![CDATA[http://code.google.com/p/imgcmp/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>repository</wp:meta_key>
			<wp:meta_value><![CDATA[https://imgcmp.googlecode.com/svn/trunk/]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
